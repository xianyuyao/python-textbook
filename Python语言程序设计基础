str1=input("请输入人名：")
str2=input("请输入地名：")
print("世界这么大，{}想去{}看看".format(str1,str2))

N=input("请输入一个正数：")
sum=0
for i in range(int(N)):
	sum+=i+1
print("sum({})={}".format(N,sum))

for i in range(1,10):
	for j in range(1,10):
		print("{}*{}={:2}".format(i,j,i*j),end=' ')
	print(' ')

sum1,tmp=0,1
for i in range(1,11):
	tmp*=i
	sum1+=tmp
print("{}".format(sum1))

n=1
for i in range(5,0,-1):
	n=(n+1)<<1
print(n)

diet=['西红柿','花椰菜','黄瓜','牛排','虾仁']
for x in range(0,5):
	for y in range(0,5):
		if not(x==y):
			print("{},{}".format(diet[x],diet[y]),end=' ')
	print(' ')

from turtle import *
fillcolor("red")
begin_fill()
while True:
	forward(200)
	right(144)
	if abs(pos())<1:
		break
end_fill()

from turtle import *
color('red','yellow')
begin_fill()
while True:
	forward(200)
	left(170)
	if abs(pos())<1:
		break
end_fill()

from turtle import *
setup(650,350,200,200) #宽，高，对话框位置，对话框位置
penup()
fd(-250)
pendown()
pensize(25)
pencolor("purple")
seth(-40)
for i in range(4):
	circle(40,80)
	circle(-40,80)
circle(40,80/2)
fd(40)
circle(16,180)
fd(40*2/3)

eval(x) #把x变成需要的样子

print("{:.2f}".format()) #保留两位小数

money=input("请输入带单位的钱：")
if money[-1] in ['元']:
	dollar=eval(money[0:-1])/6
	print("换算成美元，为{}美元".format(dollar))
else:
	chin=eval(money[0:-1])*6
	print("换算成人民币，为{}元".format(chin))

pow(x,y) #x的y次方

x//y #整除
x**y #x的y次方
x%y #余数

python的内置函数
abs(-34)=>34	#绝对值函数
divmod(3,4)=>(3//4,3%4)
pow(2,3)=>2的3次方
round(3.14159,3)=>3.142 保留3位小数
max(2,3,4)=>极大值
min(2,3,4)=>极小值
int(x)=>字符串或浮点数x转换为整数
float(x)=>整数或字符串x转换为字符串
complex(10.99)=>生成一个复数
len(x)=>字符串x的长度
str(x)=>x变成字符串类型
chr(x)=>返回编码的对应字符
ord(x)=>返回编码的对应数字
hex(x)=>返回十六进制数
oct(x)=>返回八进制数
x.lower()=>全变成小写
x.upper()=>全大写
x.islower()=>判断
x.isprintable()=>当x的所有字符都是可打印的，回复是
x.isnumeric()=>是否全是数字
xisspace()=>是否全是空格
x.endswith(y)=>x的结尾是否是y
x.startswith(y)=>同上
x.split(sep="y")=>一个列表，是被y分开的x组成的
x.count(y)=>返回y在x中出现的次数
x.replace(old,new)=>替换功能
x.center(width)=>居中函数
x.strip(y)=>从左侧右侧去掉x的y
x.zfill(width)=>返回长度为width的x，不足的用0补足
x.format()=>返回x的排版格式
x.join(iterable)=>

math库函数
from math import *
pi =>π
e =>自然对数
inf =>正无穷大
nan =>非浮点数标记
fabs(-3.2) =>3.2 #绝对值函数
fmod(3,2)=>3%2
fsum(3,4,5)=>求和
ceil(3.24)=>4 向上取整
floor(3.24)=>3 向下取整
factorial(3)=>3! 阶乘
gcd(2,3)=>1 返回最大公约数
modf(3.34)=>返回整数部分和小数部分
trunc(3.42)=>3 返回整数部分
copysign(4,-5)=>-4 用后面的符号换前面的符号
isclose(2,3)=>比较2,3是否相似，返回是否
pow(3,4)=>幂函数,同样可以开根号
exp(3)=>e的3次方
sqrt(4)=>根号4
log(4,2)=>log(2)4
degrees(pi)=>180 提供弧度，返回角度
radians(180)=>pi 相反
hypot(3,4)=>5求斜边

"\n"=>换行
"\t"=>tab

format()格式控制
"{0:30}".forward()=>默认右对齐，30为输出宽度
"{0:>30}".forward()=>左对齐对齐
"{0:*^30}".forward()=>居中，且用*填充
"{0:-^30,}".forward()=>居中，且用-填充","指的是千分位会用逗号隔开
"{0:.2f}".format(3.2324)=>两位小数
"{0:H^.2f}".format(3.2324)=>两位小数，居中且用H填充
b=>二进制形式
c=>unicode形式
d=>十进制形式
o=>八进制形式
x=>小写十六进制
X=>大写十六进制
e=>小写指数形式
E=>大写指数形式
f=>小写浮点数形式
F=>大写浮点数形式

from time import *
print("{0:*^20}".format("执行开始"))
for i in range(1,11):
	x=10*i
	y=i*"**"
	z="--"*(10-i)
	print("%{:3}[{}->{}]".format(x,y,z))
	sleep(0.1)
print("{0:*^20}".format("执行结束"))

from time import *
print("{0:*^20}".format("执行开始"))
t=clock()
for i in range(1,11):
	x=10*i
	y=i*"**"
	z="--"*(10-i)
	t-=clock()
	print("%{:3}[{}->{}]{:.2f}s".format(x,y,z,t))
	sleep(0.1)
print("{0:*^20}".format("执行结束"))

from tqdm import tqdm
from time import sleep
for i in tqdm(range(1,100)):
	sleep(0.01)

random库的常用函数
